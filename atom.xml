<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Perkins4j2的技术博客</title>
  
  <subtitle>一个人,一根烧火棍,面对整个世界.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://perkins4j2.github.io/"/>
  <updated>2019-09-09T01:37:51.404Z</updated>
  <id>https://perkins4j2.github.io/</id>
  
  <author>
    <name>Perkins</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java并发编程艺术 - 多线程wait和notify</title>
    <link href="https://perkins4j2.github.io/posts/48047/"/>
    <id>https://perkins4j2.github.io/posts/48047/</id>
    <published>2019-09-09T01:21:33.000Z</published>
    <updated>2019-09-09T01:37:51.404Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;等待-通知机制&quot;&gt;&lt;a href=&quot;#等待-通知机制&quot; class=&quot;headerlink&quot; title=&quot;等待/通知机制&quot;&gt;&lt;/a&gt;等待/通知机制&lt;/h3&gt;&lt;p&gt;等待/通知机制，是指一个线程A调用了对象O的wait()方法进入等待状态，而另一个线程B调用了对象O的notify()或者notifyAll()方法，线程A收到通知后从对象O的wait()方法返回，进而&lt;br&gt;执行后续操作。&lt;/p&gt;
&lt;p&gt;上述两个线程通过对象O来完成交互，而对象上的wait()和notify/notifyAll()的&lt;br&gt;关系就如同开关信号一样，用来完成等待方和通知方之间的交互工作。&lt;br&gt;
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="https://perkins4j2.github.io/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="多线程" scheme="https://perkins4j2.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程艺术 - 线程终结</title>
    <link href="https://perkins4j2.github.io/posts/52791/"/>
    <id>https://perkins4j2.github.io/posts/52791/</id>
    <published>2019-09-05T01:05:00.000Z</published>
    <updated>2019-09-05T01:22:02.944Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;中断状态是线程的一个标识位，而中断操作是一种简便的线程间交互&lt;br&gt;方式，而这种交互方式最适合用来取消或停止任务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;除了中断以外，还可以利用一个boolean变量来控制是否需要停止任务并终止该线程。&lt;/p&gt;
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="https://perkins4j2.github.io/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="多线程" scheme="https://perkins4j2.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程艺术 - 线程中断</title>
    <link href="https://perkins4j2.github.io/posts/45493/"/>
    <id>https://perkins4j2.github.io/posts/45493/</id>
    <published>2019-09-03T01:09:41.000Z</published>
    <updated>2019-09-03T01:43:05.351Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;中断可以理解为线程的一个标识位属性，它表示一个运行中的线程是否被其他线程进行了中断操作。中断好比其他线程对该线程打了个招呼，其他线程通过调用该线程的interrupt()&lt;br&gt;方法对其进行中断操作。&lt;br&gt;
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="https://perkins4j2.github.io/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="多线程" scheme="https://perkins4j2.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程艺术 - 多线程构造和启动</title>
    <link href="https://perkins4j2.github.io/posts/58008/"/>
    <id>https://perkins4j2.github.io/posts/58008/</id>
    <published>2019-08-29T01:22:22.000Z</published>
    <updated>2019-08-29T01:42:51.848Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;构造线程&quot;&gt;&lt;a href=&quot;#构造线程&quot; class=&quot;headerlink&quot; title=&quot;构造线程&quot;&gt;&lt;/a&gt;构造线程&lt;/h3&gt;&lt;p&gt;在运行线程之前首先要构造一个线程对象，线程对象在构造的时候需要提供线程所需要的属性，如线程所属的线程组、线程优先级、是否是Daemon线程等信息。&lt;/p&gt;
&lt;h3 id=&quot;线程启动&quot;&gt;&lt;a href=&quot;#线程启动&quot; class=&quot;headerlink&quot; title=&quot;线程启动&quot;&gt;&lt;/a&gt;线程启动&lt;/h3&gt;&lt;p&gt;线程对象在初始化完成之后，调用start()方法就可以启动这个线程。&lt;/p&gt;
&lt;p&gt;线程start()方法的含当前线程（即parent线程）同步告知Java虚拟机，只要线程规划器空闲，应立即启动调用()方法的线程。&lt;/p&gt;
&lt;p&gt;注意 启动一个线程前，最好为这个线程设置线程名称，因为这样在使用jstack分析或者进行问题排查时，就会给开发人员提供一些提示，自定义的线程最好能够起个名字。&lt;/p&gt;
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java并发编程" scheme="https://perkins4j2.github.io/tags/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="多线程" scheme="https://perkins4j2.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Maven自定义打包脚本</title>
    <link href="https://perkins4j2.github.io/posts/26061/"/>
    <id>https://perkins4j2.github.io/posts/26061/</id>
    <published>2019-08-23T01:04:46.000Z</published>
    <updated>2019-08-27T13:09:14.051Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;利用Maven脚本，实现以下需求:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将第三方lib单独打包&lt;/li&gt;
&lt;li&gt;将脚本单独打包&lt;/li&gt;
&lt;li&gt;将执行jar单独打包&lt;/li&gt;
&lt;li&gt;将配置文件单独打包&lt;/li&gt;
&lt;li&gt;自动关闭和启动进程&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="工具利器" scheme="https://perkins4j2.github.io/categories/%E5%B7%A5%E5%85%B7%E5%88%A9%E5%99%A8/"/>
    
    
      <category term="Maven" scheme="https://perkins4j2.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Java Collection Sort之IllegalArgumentException</title>
    <link href="https://perkins4j2.github.io/posts/63757/"/>
    <id>https://perkins4j2.github.io/posts/63757/</id>
    <published>2019-08-22T00:53:53.000Z</published>
    <updated>2019-08-22T01:13:56.256Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;java-lang-IllegalArgumentException-Comparison-method-violates-its-general-contract&quot;&gt;&lt;a href=&quot;#java-lang-IllegalArgumentException-Comparison-method-violates-its-general-contract&quot; class=&quot;headerlink&quot; title=&quot;java.lang.IllegalArgumentException: Comparison method violates its general contract!&quot;&gt;&lt;/a&gt;java.lang.IllegalArgumentException: Comparison method violates its general contract!&lt;/h3&gt;&lt;p&gt;在 JDK 7 版本以上， Comparator 要满足自反性，传递性，对称性，不然Arrays.sort、Collections.sort会报 IllegalArgumentException 异常。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://perkins4j2.github.io/categories/Java/"/>
    
    
      <category term="Sort" scheme="https://perkins4j2.github.io/tags/Sort/"/>
    
      <category term="Comparator" scheme="https://perkins4j2.github.io/tags/Comparator/"/>
    
  </entry>
  
  <entry>
    <title>Java双份对象数据热切换</title>
    <link href="https://perkins4j2.github.io/posts/42352/"/>
    <id>https://perkins4j2.github.io/posts/42352/</id>
    <published>2019-08-21T12:07:22.000Z</published>
    <updated>2019-08-22T00:37:09.165Z</updated>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当前副本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; r1 = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第二个副本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; r2 = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; AtomicBoolean replicationIsEmpty = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AtomicBoolean();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="数据切换" scheme="https://perkins4j2.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%87%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>WatchService监控目录和文件变化</title>
    <link href="https://perkins4j2.github.io/posts/34381/"/>
    <id>https://perkins4j2.github.io/posts/34381/</id>
    <published>2019-08-21T12:06:32.000Z</published>
    <updated>2019-09-05T01:20:09.655Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;两种监控文件和目录方式&quot;&gt;&lt;a href=&quot;#两种监控文件和目录方式&quot; class=&quot;headerlink&quot; title=&quot;两种监控文件和目录方式&quot;&gt;&lt;/a&gt;两种监控文件和目录方式&lt;/h3&gt;&lt;h4 id=&quot;Commons-io&quot;&gt;&lt;a href=&quot;#Commons-io&quot; class=&quot;headerlink&quot; title=&quot;Commons-io&quot;&gt;&lt;/a&gt;Commons-io&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在Apache的Commons-io提供文件的监控功能。&lt;/li&gt;
&lt;li&gt;由文件监控类FileAlterationMonitor中的线程不停的扫描文件观察器FileAlterationObserver。&lt;/li&gt;
&lt;li&gt;如果有文件的变化，则根据相关的文件比较器，判断文件时新增，还是删除，还是更改。（默认为1000毫秒执行一次扫描）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;WatchService&quot;&gt;&lt;a href=&quot;#WatchService&quot; class=&quot;headerlink&quot; title=&quot;WatchService&quot;&gt;&lt;/a&gt;WatchService&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Java1.7中提供了NIO WatchService来监控系统中文件的变化。&lt;/li&gt;
&lt;li&gt;该监控是基于操作系统的文件系统监控器，可以监控系统是所有文件的变化，这种监控是无需遍历、无需比较的，是一种基于信号收发的监控。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整个监控目录文件操作的流程大致如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取 WatchService&lt;/li&gt;
&lt;li&gt;注册指定目录的监视器&lt;/li&gt;
&lt;li&gt;等待目录下的文件发生变化&lt;/li&gt;
&lt;li&gt;对发生变化的文件进行操作
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="WatchService" scheme="https://perkins4j2.github.io/tags/WatchService/"/>
    
  </entry>
  
  <entry>
    <title>RPC框架 - Thrift协议定义</title>
    <link href="https://perkins4j2.github.io/posts/45936/"/>
    <id>https://perkins4j2.github.io/posts/45936/</id>
    <published>2019-08-19T01:12:30.000Z</published>
    <updated>2019-08-19T01:43:26.987Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;rpc&quot;&gt;&lt;a href=&quot;#rpc&quot; class=&quot;headerlink&quot; title=&quot;rpc&quot;&gt;&lt;/a&gt;rpc&lt;/h3&gt;&lt;p&gt;RPC 是远程过程调用（Remote Procedure Call）。&lt;/p&gt;
&lt;p&gt;RPC 是指计算机 A 上的进程，调用另外一台计算机 B 上的进程，其中 A 上的调用进程被挂起，而 B 上的被调用进程开始执行，当值返回给 A 时，A 进程继续执行。调用方可以通过使用参数将信息传送给被调用方，而后可以通过传回的结果得到信息。&lt;/p&gt;
&lt;p&gt;远程过程调用采用客户机/服务器(C/S)模式。请求程序就是一个客户机，而服务提供程序就是一台服务器。和常规或本地过程调用一样，远程过程调用是同步操作，在远程过程结果返回之前，需要暂时中止请求程序。使用相同地址空间的低权进程或低权线程允许同时运行多个远程过程调用。&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="thrift" scheme="https://perkins4j2.github.io/tags/thrift/"/>
    
      <category term="rpc" scheme="https://perkins4j2.github.io/tags/rpc/"/>
    
  </entry>
  
  <entry>
    <title>Lucene利用Hanlp分词索引和检索</title>
    <link href="https://perkins4j2.github.io/posts/49532/"/>
    <id>https://perkins4j2.github.io/posts/49532/</id>
    <published>2019-08-19T00:58:20.000Z</published>
    <updated>2019-08-19T01:10:26.539Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;包引入&quot;&gt;&lt;a href=&quot;#包引入&quot; class=&quot;headerlink&quot; title=&quot;包引入&quot;&gt;&lt;/a&gt;包引入&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;pom引入lucene和hanlp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;lucene版本为7.4&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hanlp分词器版本为1.1.6&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.lucene&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;lucene-core&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;7.4.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.lucene&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;lucene-queryparser&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;7.4.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.hankcs.nlp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;hanlp-lucene-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.1.6&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="lucene" scheme="https://perkins4j2.github.io/tags/lucene/"/>
    
      <category term="hanlp" scheme="https://perkins4j2.github.io/tags/hanlp/"/>
    
  </entry>
  
  <entry>
    <title>Java线程池 - ThreadPool自定义封装</title>
    <link href="https://perkins4j2.github.io/posts/33509/"/>
    <id>https://perkins4j2.github.io/posts/33509/</id>
    <published>2019-08-16T01:16:42.000Z</published>
    <updated>2019-08-20T01:35:01.157Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;自定义线程池，便于调试和控制线程&lt;/li&gt;
&lt;li&gt;自定义线程数、拒绝策略、关闭等
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="线程池" scheme="https://perkins4j2.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java线程池 - ThreadFactory封装</title>
    <link href="https://perkins4j2.github.io/posts/59782/"/>
    <id>https://perkins4j2.github.io/posts/59782/</id>
    <published>2019-08-16T01:16:08.000Z</published>
    <updated>2019-08-16T01:51:45.089Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;自定义ThreadFactory，便于创建自定义线程&lt;/li&gt;
&lt;li&gt;自定义ThreadGroup，便于对线程分组管理
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="线程池" scheme="https://perkins4j2.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java线程池 - Callable和Runnable封装</title>
    <link href="https://perkins4j2.github.io/posts/9431/"/>
    <id>https://perkins4j2.github.io/posts/9431/</id>
    <published>2019-08-16T01:15:15.000Z</published>
    <updated>2019-08-21T12:05:10.303Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;对Callable和Runnable封装，提供自定义执行接口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;补充异常处理&lt;/p&gt;
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="线程池" scheme="https://perkins4j2.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Maven配置Profile</title>
    <link href="https://perkins4j2.github.io/posts/52371/"/>
    <id>https://perkins4j2.github.io/posts/52371/</id>
    <published>2019-08-15T01:04:26.000Z</published>
    <updated>2019-08-15T01:08:43.347Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;项目根据环境不同，设置不同参数&lt;/li&gt;
&lt;li&gt;实现在代码中无需改动，以防误提交&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在pom中添加以下配置&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="maven" scheme="https://perkins4j2.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Docker部署和配置Nginx</title>
    <link href="https://perkins4j2.github.io/posts/29980/"/>
    <id>https://perkins4j2.github.io/posts/29980/</id>
    <published>2019-08-14T08:26:05.000Z</published>
    <updated>2019-08-14T08:40:18.840Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;获取镜像&quot;&gt;&lt;a href=&quot;#获取镜像&quot; class=&quot;headerlink&quot; title=&quot;获取镜像&quot;&gt;&lt;/a&gt;获取镜像&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker search nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装官方版本&lt;br&gt;name： docker.io/nginx&lt;br&gt;OFFICIAL： ok&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker images nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;拉取并查看镜像&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="docker" scheme="https://perkins4j2.github.io/tags/docker/"/>
    
      <category term="nginx" scheme="https://perkins4j2.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Java Lambda Stream原理</title>
    <link href="https://perkins4j2.github.io/posts/42366/"/>
    <id>https://perkins4j2.github.io/posts/42366/</id>
    <published>2019-08-07T01:05:28.000Z</published>
    <updated>2019-08-14T08:28:24.813Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;举例&quot;&gt;&lt;a href=&quot;#举例&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List list = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list.add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list.add(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list.stream().forEach(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out::println&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Lambda" scheme="https://perkins4j2.github.io/tags/Lambda/"/>
    
  </entry>
  
  <entry>
    <title>Java Lambda FunctionalInterface原理</title>
    <link href="https://perkins4j2.github.io/posts/54901/"/>
    <id>https://perkins4j2.github.io/posts/54901/</id>
    <published>2019-08-07T01:01:11.000Z</published>
    <updated>2019-08-14T02:17:13.579Z</updated>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@FunctionalInterface&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Print&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T x)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Lambda&lt;/span&gt; &lt;/span&gt;&amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PrintString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s, Print&amp;lt;String&amp;gt; print)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print.print(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PrintString(&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;, (x) -&amp;gt; System.out.println(x));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Lambda" scheme="https://perkins4j2.github.io/tags/Lambda/"/>
    
  </entry>
  
  <entry>
    <title>Java8常用文件处理方法</title>
    <link href="https://perkins4j2.github.io/posts/58696/"/>
    <id>https://perkins4j2.github.io/posts/58696/</id>
    <published>2019-08-05T13:15:29.000Z</published>
    <updated>2019-08-07T01:04:55.642Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;获取并解析文件&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        InputStream resource = Test.class.getResourceAsStream(&lt;span class=&quot;string&quot;&gt;&quot;/a.txt&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            BufferedReader bufferedReader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InputStreamReader(resource));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 获取文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String line;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((line = bufferedReader.readLine()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="工具利器" scheme="https://perkins4j2.github.io/categories/%E5%B7%A5%E5%85%B7%E5%88%A9%E5%99%A8/"/>
    
    
      <category term="Java8" scheme="https://perkins4j2.github.io/tags/Java8/"/>
    
  </entry>
  
  <entry>
    <title>Docker基本操作</title>
    <link href="https://perkins4j2.github.io/posts/5308/"/>
    <id>https://perkins4j2.github.io/posts/5308/</id>
    <published>2019-08-02T01:22:03.000Z</published>
    <updated>2019-08-02T01:53:13.711Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;查看进程&quot;&gt;&lt;a href=&quot;#查看进程&quot; class=&quot;headerlink&quot; title=&quot;查看进程&quot;&gt;&lt;/a&gt;查看进程&lt;/h3&gt;&lt;p&gt;docker ps&lt;/p&gt;
&lt;h3 id=&quot;关闭进程&quot;&gt;&lt;a href=&quot;#关闭进程&quot; class=&quot;headerlink&quot; title=&quot;关闭进程&quot;&gt;&lt;/a&gt;关闭进程&lt;/h3&gt;&lt;p&gt;docker kill -s KILL 376ec4b90&lt;/p&gt;
&lt;p&gt;docker kill 376ec4b90&lt;/p&gt;
&lt;p&gt;docker rm 376ec4b90&lt;/p&gt;
&lt;p&gt;docker restart 376ec4b90&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="docker" scheme="https://perkins4j2.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus与Grafana部署和安装</title>
    <link href="https://perkins4j2.github.io/posts/1379/"/>
    <id>https://perkins4j2.github.io/posts/1379/</id>
    <published>2019-08-02T01:21:44.000Z</published>
    <updated>2019-08-02T01:53:13.704Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;prometheus&quot;&gt;&lt;a href=&quot;#prometheus&quot; class=&quot;headerlink&quot; title=&quot;prometheus&quot;&gt;&lt;/a&gt;prometheus&lt;/h2&gt;&lt;p&gt; &lt;a href=&quot;https://prometheus.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Prometheus&lt;/a&gt;是开源监控报警系统。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;多维度数据模型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;灵活的查询语言。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不依赖分布式存储，单个服务器节点是自主的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过基于HTTP的pull方式采集时序数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以通过中间网关进行时序列数据推送。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过服务发现或者静态配置来发现目标服务对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持多种多样的图表和界面展示，比如Grafana等。&lt;/p&gt;
    
    </summary>
    
      <category term="工具利器" scheme="https://perkins4j2.github.io/categories/%E5%B7%A5%E5%85%B7%E5%88%A9%E5%99%A8/"/>
    
    
      <category term="Prometheus" scheme="https://perkins4j2.github.io/tags/Prometheus/"/>
    
      <category term="Grafana" scheme="https://perkins4j2.github.io/tags/Grafana/"/>
    
  </entry>
  
</feed>
