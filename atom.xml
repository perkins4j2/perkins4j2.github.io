<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Perkins4j2的技术博客</title>
  
  <subtitle>一个人,一根烧火棍,面对整个世界.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://perkins4j2.github.io/"/>
  <updated>2020-10-09T12:20:18.439Z</updated>
  <id>https://perkins4j2.github.io/</id>
  
  <author>
    <name>Perkins</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java隐藏特征</title>
    <link href="https://perkins4j2.github.io/posts/3350900/"/>
    <id>https://perkins4j2.github.io/posts/3350900/</id>
    <published>2020-10-09T12:19:14.000Z</published>
    <updated>2020-10-09T12:20:18.439Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Double-Brace-Initialization&quot;&gt;&lt;a href=&quot;#Double-Brace-Initialization&quot; class=&quot;headerlink&quot; title=&quot;Double Brace Initialization&quot;&gt;&lt;/a&gt;Double Brace Initialization&lt;/h3&gt;&lt;p&gt;双括号初始化，创建一个从指定类（外部大括号）派生的匿名类，并在该类（内部大括号）中提供初始化块。&lt;/p&gt;
&lt;p&gt;每次使用双括号初始化时，都会生成一个新类，创建的类具有指向周围外部类的隐式this指针。&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="https://perkins4j2.github.io/categories/Java/"/>
    
    
      <category term="并发编程" scheme="https://perkins4j2.github.io/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hazelcast服务及注册中心实现</title>
    <link href="https://perkins4j2.github.io/posts/5377900/"/>
    <id>https://perkins4j2.github.io/posts/5377900/</id>
    <published>2020-10-09T12:17:44.000Z</published>
    <updated>2020-10-09T12:24:07.628Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;分区和复制&quot;&gt;&lt;a href=&quot;#分区和复制&quot; class=&quot;headerlink&quot; title=&quot;分区和复制&quot;&gt;&lt;/a&gt;分区和复制&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//backup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MapConfig()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.setBackupCount(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.setAsyncBackupCount(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.setReadBackupData(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Hazelcast" scheme="https://perkins4j2.github.io/tags/Hazelcast/"/>
    
  </entry>
  
  <entry>
    <title>Lambda重构面向对象的设计模式</title>
    <link href="https://perkins4j2.github.io/posts/2762600/"/>
    <id>https://perkins4j2.github.io/posts/2762600/</id>
    <published>2020-10-09T12:17:04.000Z</published>
    <updated>2020-10-09T12:23:20.161Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;策略模式&quot;&gt;&lt;a href=&quot;#策略模式&quot; class=&quot;headerlink&quot; title=&quot;策略模式&quot;&gt;&lt;/a&gt;策略模式&lt;/h3&gt;&lt;p&gt;Lambda表达式避免了采用策略设计模式时僵化的模板代码。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Validator numericValidator = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Validator((String s) -&amp;gt; s.matches(&lt;span class=&quot;string&quot;&gt;&quot;[a-z]+&quot;&lt;/span&gt;)); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; b1 = numericValidator.validate(&lt;span class=&quot;string&quot;&gt;&quot;aaaa&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Validator lowerCaseValidator = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Validator((String s) -&amp;gt; s.matches(&lt;span class=&quot;string&quot;&gt;&quot;\\d+&quot;&lt;/span&gt;)); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; b2 = lowerCaseValidator.validate(&lt;span class=&quot;string&quot;&gt;&quot;bbbb&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Lambda" scheme="https://perkins4j2.github.io/tags/Lambda/"/>
    
  </entry>
  
  <entry>
    <title>Vue教程</title>
    <link href="https://perkins4j2.github.io/posts/6310700/"/>
    <id>https://perkins4j2.github.io/posts/6310700/</id>
    <published>2020-10-09T12:16:53.000Z</published>
    <updated>2020-10-09T12:22:43.891Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;声明式渲染&quot;&gt;&lt;a href=&quot;#声明式渲染&quot; class=&quot;headerlink&quot; title=&quot;声明式渲染&quot;&gt;&lt;/a&gt;声明式渲染&lt;/h3&gt;&lt;p&gt;模板语法来声明式地将数据渲染进 DOM 的系统&lt;br&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Vue" scheme="https://perkins4j2.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>CompletableFuture组合式异步编程</title>
    <link href="https://perkins4j2.github.io/posts/13999100/"/>
    <id>https://perkins4j2.github.io/posts/13999100/</id>
    <published>2020-10-09T12:16:08.000Z</published>
    <updated>2020-10-09T12:22:09.420Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Callable与Runnable&quot;&gt;&lt;a href=&quot;#Callable与Runnable&quot; class=&quot;headerlink&quot; title=&quot;Callable与Runnable&quot;&gt;&lt;/a&gt;Callable与Runnable&lt;/h3&gt;&lt;p&gt;java.lang.Runnable吧，它是一个接口，在它里面只声明了一个run()方法，由于run()方法返回值为void类型，所以在执行完任务之后无法返回任何结果。&lt;/p&gt;
&lt;p&gt;Callable位于java.util.concurrent包下，它也是一个接口，在它里面也只声明了一个方法，只不过这个方法叫做call()，这是一个泛型接口，call()函数返回的类型就是传递进来的V类型。&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="CompletableFuture" scheme="https://perkins4j2.github.io/tags/CompletableFuture/"/>
    
  </entry>
  
  <entry>
    <title>Maven多Module自定义archetype</title>
    <link href="https://perkins4j2.github.io/posts/72500/"/>
    <id>https://perkins4j2.github.io/posts/72500/</id>
    <published>2020-10-09T12:15:57.000Z</published>
    <updated>2020-10-09T12:21:27.653Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;创建archetype项目&quot;&gt;&lt;a href=&quot;#创建archetype项目&quot; class=&quot;headerlink&quot; title=&quot;创建archetype项目&quot;&gt;&lt;/a&gt;创建archetype项目&lt;/h3&gt;&lt;h4 id=&quot;创建Parent&quot;&gt;&lt;a href=&quot;#创建Parent&quot; class=&quot;headerlink&quot; title=&quot;创建Parent&quot;&gt;&lt;/a&gt;创建Parent&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;利用IDEA创建骨架项目，名称例如archetype-all&lt;/li&gt;
&lt;li&gt;Pom&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;archetype-all&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;packaging&lt;/span&gt;&amp;gt;&lt;/span&gt;pom&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;packaging&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0.0-SNAPSHOT&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;extensions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;extension&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.archetype&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;archetype-packaging&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.2.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;extension&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;extensions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;pluginManagement&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-archetype-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.2.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;pluginManagement&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="工具利器" scheme="https://perkins4j2.github.io/categories/%E5%B7%A5%E5%85%B7%E5%88%A9%E5%99%A8/"/>
    
    
      <category term="Maven" scheme="https://perkins4j2.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>GraphQL服务实现</title>
    <link href="https://perkins4j2.github.io/posts/522360011/"/>
    <id>https://perkins4j2.github.io/posts/522360011/</id>
    <published>2020-09-01T13:33:04.000Z</published>
    <updated>2020-09-01T13:34:23.924Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;GraphQL是一种用于API或数据的查询语言。&lt;/p&gt;
&lt;h3 id=&quot;优势&quot;&gt;&lt;a href=&quot;#优势&quot; class=&quot;headerlink&quot; title=&quot;优势&quot;&gt;&lt;/a&gt;优势&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;发出一个GraphQL请求就能准确获得想要的数据，不多不少。 - GraphQL查询总是返回可预测的结果。&lt;/li&gt;
&lt;li&gt;REST API请求多个资源时，GraphQL可以通过一次请求就获取所需的所有数据。&lt;/li&gt;
&lt;li&gt;GraphQL基于类型和字段的方式进行查询语言定义。
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="GraphQL" scheme="https://perkins4j2.github.io/tags/GraphQL/"/>
    
  </entry>
  
  <entry>
    <title>协议升级机制</title>
    <link href="https://perkins4j2.github.io/posts/254331/"/>
    <id>https://perkins4j2.github.io/posts/254331/</id>
    <published>2020-08-31T13:44:10.000Z</published>
    <updated>2020-08-31T13:45:52.373Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;协议升级&quot;&gt;&lt;a href=&quot;#协议升级&quot; class=&quot;headerlink&quot; title=&quot;协议升级&quot;&gt;&lt;/a&gt;协议升级&lt;/h3&gt;&lt;p&gt;HTTP协议 提供了一种特殊的机制，这一机制允许将一个已建立的连接升级成新的、不相容的协议。这篇指南涵盖了其工作原理和使用场景。&lt;/p&gt;
&lt;p&gt;通常来说这一机制总是由客户端发起的 （不过也有例外，比如说可以由服务端发起升级到传输层安全协议（TLS））， 服务端可以选择是否要升级到新协议。借助这一技术，连接可以以常用的协议启动（如HTTP/1.1），随后再升级到HTTP2甚至是WebSockets.&lt;/p&gt;
&lt;p&gt;注意：HTTP/2 明确禁止使用此机制，这个机制只属于HTTP/1.1&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="HTTP" scheme="https://perkins4j2.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>RandomAccessFile随机读写文件</title>
    <link href="https://perkins4j2.github.io/posts/32311/"/>
    <id>https://perkins4j2.github.io/posts/32311/</id>
    <published>2020-08-31T13:44:00.000Z</published>
    <updated>2020-08-31T13:45:00.933Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;RandomAccessFile提供了对文件的读写功能。RandomAccessFile 虽然属于java.io下的类，但它不是InputStream或者OutputStream的子类；它也不同于FileInputStream和FileOutputStream。 &lt;/p&gt;
&lt;p&gt;FileInputStream 只能对文件进行读操作，而FileOutputStream 只能对文件进行写操作；但是，RandomAccessFile 与输入流和输出流不同之处就是RandomAccessFile可以访问文件的任意地方同时支持文件的读和写，并且它支持随机访问。&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Java" scheme="https://perkins4j2.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>中文分词</title>
    <link href="https://perkins4j2.github.io/posts/208501/"/>
    <id>https://perkins4j2.github.io/posts/208501/</id>
    <published>2020-08-31T13:38:19.000Z</published>
    <updated>2020-08-31T13:45:57.670Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;词是最小的能够独立活动的有意义的语言成分，英文单词之间是以空格作为自然分界符的，而汉语是以字为基本的书写单位，词语之间没有明显的区分标记，因此，中文词语分析是中文信息处理的基础与关键。&lt;/p&gt;
&lt;p&gt;Lucene中对中文的处理是基于自动切分的单字切分，或者二元切分。除此之外，还有最大切分（包括向前、向后、以及前后相结合）、最少切分、全切分等等。&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="分词" scheme="https://perkins4j2.github.io/tags/%E5%88%86%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>CompletableFuture方法</title>
    <link href="https://perkins4j2.github.io/posts/139991/"/>
    <id>https://perkins4j2.github.io/posts/139991/</id>
    <published>2020-08-31T13:38:10.000Z</published>
    <updated>2020-08-31T13:42:56.301Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;在Java 8中，引入了CompletableFuture类。除Future接口外，它还实现了CompletionStage接口。该接口为异步计算步骤定义了联系，该联系可以与其他步骤结合使用。&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="CompletableFuture" scheme="https://perkins4j2.github.io/tags/CompletableFuture/"/>
    
  </entry>
  
  <entry>
    <title>JVM诊断</title>
    <link href="https://perkins4j2.github.io/posts/1399911/"/>
    <id>https://perkins4j2.github.io/posts/1399911/</id>
    <published>2020-08-31T13:37:16.000Z</published>
    <updated>2020-08-31T13:42:34.055Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;查看堆栈&quot;&gt;&lt;a href=&quot;#查看堆栈&quot; class=&quot;headerlink&quot; title=&quot;查看堆栈&quot;&gt;&lt;/a&gt;查看堆栈&lt;/h3&gt;&lt;h4 id=&quot;jstack&quot;&gt;&lt;a href=&quot;#jstack&quot; class=&quot;headerlink&quot; title=&quot;jstack&quot;&gt;&lt;/a&gt;jstack&lt;/h4&gt;&lt;p&gt;jstack 是 JDK 自带的工具，用于 dump 指定进程 ID(PID)的 JVM 的线程堆栈信息。&lt;br&gt;jstack PID&lt;/p&gt;
&lt;p&gt;打印关于锁的信息&lt;br&gt;jstack -l PID&lt;/p&gt;
&lt;p&gt;JVM进程可能挂起，强制打印堆栈信息&lt;br&gt;jstack -F PID&lt;/p&gt;
    
    </summary>
    
      <category term="工具利器" scheme="https://perkins4j2.github.io/categories/%E5%B7%A5%E5%85%B7%E5%88%A9%E5%99%A8/"/>
    
    
      <category term="Java8" scheme="https://perkins4j2.github.io/tags/Java8/"/>
    
  </entry>
  
  <entry>
    <title>Java实现gRPC的单和双流等服务调用</title>
    <link href="https://perkins4j2.github.io/posts/43712/"/>
    <id>https://perkins4j2.github.io/posts/43712/</id>
    <published>2020-08-17T12:53:42.000Z</published>
    <updated>2020-08-17T12:54:37.695Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Client-Stub&quot;&gt;&lt;a href=&quot;#Client-Stub&quot; class=&quot;headerlink&quot; title=&quot;Client Stub&quot;&gt;&lt;/a&gt;Client Stub&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ServiceGrpc.ServiceFutureStub stub;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ServiceGrpc.ServiceStub streamStub;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ManagedChannel channel = ManagedChannelBuilder.forAddress(&lt;span class=&quot;string&quot;&gt;&quot;192.168.1.100&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20000&lt;/span&gt;).usePlaintext().build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stub = ServiceGrpc.newFutureStub(channel).withExecutor(executor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;streamStub = ServiceGrpc.newStub(channel);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="gRPC" scheme="https://perkins4j2.github.io/tags/gRPC/"/>
    
  </entry>
  
  <entry>
    <title>Java实现gRPC服务</title>
    <link href="https://perkins4j2.github.io/posts/24127/"/>
    <id>https://perkins4j2.github.io/posts/24127/</id>
    <published>2020-08-17T12:23:28.000Z</published>
    <updated>2020-08-17T12:54:37.694Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;GRPC&quot;&gt;&lt;a href=&quot;#GRPC&quot; class=&quot;headerlink&quot; title=&quot;GRPC&quot;&gt;&lt;/a&gt;GRPC&lt;/h3&gt;&lt;p&gt;gRPC由GOOGLE开发，是一款语言中立、平台中立、开源的远程过程调用(RPC)系统。&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="gRPC" scheme="https://perkins4j2.github.io/tags/gRPC/"/>
    
  </entry>
  
  <entry>
    <title>Arthas生产性能测试工具</title>
    <link href="https://perkins4j2.github.io/posts/62389/"/>
    <id>https://perkins4j2.github.io/posts/62389/</id>
    <published>2020-08-17T12:20:35.000Z</published>
    <updated>2020-10-09T12:18:44.607Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Alibaba开源的Java诊断工具&lt;/li&gt;
&lt;li&gt;生产中对类、方法性能评估&lt;/li&gt;
&lt;li&gt;查询classloader关系&lt;/li&gt;
&lt;li&gt;查看异常信息&lt;/li&gt;
&lt;li&gt;jvm、线程池和堆栈等运行状态&lt;/li&gt;
&lt;li&gt;代码修改和热加载
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Arthas" scheme="https://perkins4j2.github.io/tags/Arthas/"/>
    
  </entry>
  
  <entry>
    <title>JavaAPI调用TensorFlow2.0模型GPU或CPU</title>
    <link href="https://perkins4j2.github.io/posts/41363/"/>
    <id>https://perkins4j2.github.io/posts/41363/</id>
    <published>2020-06-08T12:25:55.000Z</published>
    <updated>2020-06-08T12:29:02.327Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;jvm设置&quot;&gt;&lt;a href=&quot;#jvm设置&quot; class=&quot;headerlink&quot; title=&quot;jvm设置&quot;&gt;&lt;/a&gt;jvm设置&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export CUDA_VISIBLE_DEVICES=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;指定GPU显卡索引&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export CUDA_VISIBLE_DEVICES=-1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;不使用GPU&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="TensorFlow" scheme="https://perkins4j2.github.io/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>EasyExcel介绍</title>
    <link href="https://perkins4j2.github.io/posts/38089/"/>
    <id>https://perkins4j2.github.io/posts/38089/</id>
    <published>2020-05-19T10:24:07.000Z</published>
    <updated>2020-05-19T10:27:27.839Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;easyexcel是阿里读写Excel工具类。&lt;/p&gt;
&lt;h3 id=&quot;pom&quot;&gt;&lt;a href=&quot;#pom&quot; class=&quot;headerlink&quot; title=&quot;pom&quot;&gt;&lt;/a&gt;pom&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;easyexcel&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.7&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="EasyExcel" scheme="https://perkins4j2.github.io/tags/EasyExcel/"/>
    
  </entry>
  
  <entry>
    <title>Spring Bean注解介绍</title>
    <link href="https://perkins4j2.github.io/posts/22671/"/>
    <id>https://perkins4j2.github.io/posts/22671/</id>
    <published>2020-05-19T10:23:59.000Z</published>
    <updated>2020-05-19T10:27:27.842Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Bean为声明由Spring管理的实例。&lt;/p&gt;
&lt;h3 id=&quot;Bean管理Demo&quot;&gt;&lt;a href=&quot;#Bean管理Demo&quot; class=&quot;headerlink&quot; title=&quot;Bean管理Demo&quot;&gt;&lt;/a&gt;Bean管理Demo&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BeanConfig&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;A &lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(B b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; A(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;B &lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; B();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;B，Bean声明，由spring管理&lt;/li&gt;
&lt;li&gt;A依赖B，输入参数为B，自动解决Bean加载顺序问题
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Spring" scheme="https://perkins4j2.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>CompletableFuture和Future介绍</title>
    <link href="https://perkins4j2.github.io/posts/13999/"/>
    <id>https://perkins4j2.github.io/posts/13999/</id>
    <published>2020-05-19T10:23:46.000Z</published>
    <updated>2020-06-08T12:27:31.021Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Future是JDK1.5后提供的异步调用接口。&lt;br&gt;CompletableFuture是JDK8提出的一个支持非阻塞的多功能的异步类，实现了Future。&lt;/p&gt;
&lt;h3 id=&quot;与Future区别&quot;&gt;&lt;a href=&quot;#与Future区别&quot; class=&quot;headerlink&quot; title=&quot;与Future区别&quot;&gt;&lt;/a&gt;与Future区别&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CompletableFuture支持回调，可指定线程池&lt;/li&gt;
&lt;li&gt;CompletableFuture支持链式、顺序和聚合等执行&lt;/li&gt;
&lt;li&gt;CompletableFuture支持不阻塞主线程且无需轮询等待状态&lt;/li&gt;
&lt;li&gt;都是提交后直接执行，并在get时阻塞等待&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="CompletableFuture" scheme="https://perkins4j2.github.io/tags/CompletableFuture/"/>
    
  </entry>
  
  <entry>
    <title>Sentinel流控和降级方案</title>
    <link href="https://perkins4j2.github.io/posts/28431/"/>
    <id>https://perkins4j2.github.io/posts/28431/</id>
    <published>2020-04-14T00:54:29.000Z</published>
    <updated>2020-04-14T01:58:11.536Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Sentinel介绍&quot;&gt;&lt;a href=&quot;#Sentinel介绍&quot; class=&quot;headerlink&quot; title=&quot;Sentinel介绍&quot;&gt;&lt;/a&gt;Sentinel介绍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;阿里巴巴中间件，负责流量控制和熔断降级。&lt;/li&gt;
&lt;li&gt;适配Spring类框架&lt;/li&gt;
&lt;li&gt;可原生开发&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;引入pom&quot;&gt;&lt;a href=&quot;#引入pom&quot; class=&quot;headerlink&quot; title=&quot;引入pom&quot;&gt;&lt;/a&gt;引入pom&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;sentinel.version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.7.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;sentinel.version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.csp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;sentinel-core&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;sentinel.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.csp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;sentinel-annotation-aspectj&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;sentinel.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.csp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;sentinel-transport-simple-http&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;sentinel.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;sentinel-core核心包&lt;/li&gt;
&lt;li&gt;sentinel-annotation-aspectj适合spring切面和注解&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sentinel-transport-simple-http便于接入console控制台&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="sentinel" scheme="https://perkins4j2.github.io/tags/sentinel/"/>
    
  </entry>
  
</feed>
