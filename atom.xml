<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Perkins4j2的技术博客</title>
  
  <subtitle>一个人,一根烧火棍,面对整个世界.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://perkins4j2.github.io/"/>
  <updated>2020-04-14T01:58:11.536Z</updated>
  <id>https://perkins4j2.github.io/</id>
  
  <author>
    <name>Perkins</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sentinel流控和降级方案</title>
    <link href="https://perkins4j2.github.io/posts/28431/"/>
    <id>https://perkins4j2.github.io/posts/28431/</id>
    <published>2020-04-14T00:54:29.000Z</published>
    <updated>2020-04-14T01:58:11.536Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Sentinel介绍&quot;&gt;&lt;a href=&quot;#Sentinel介绍&quot; class=&quot;headerlink&quot; title=&quot;Sentinel介绍&quot;&gt;&lt;/a&gt;Sentinel介绍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;阿里巴巴中间件，负责流量控制和熔断降级。&lt;/li&gt;
&lt;li&gt;适配Spring类框架&lt;/li&gt;
&lt;li&gt;可原生开发&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;引入pom&quot;&gt;&lt;a href=&quot;#引入pom&quot; class=&quot;headerlink&quot; title=&quot;引入pom&quot;&gt;&lt;/a&gt;引入pom&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;sentinel.version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.7.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;sentinel.version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.csp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;sentinel-core&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;sentinel.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.csp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;sentinel-annotation-aspectj&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;sentinel.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.csp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;sentinel-transport-simple-http&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;sentinel.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;sentinel-core核心包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sentinel-annotation-aspectj适合spring切面和注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sentinel-transport-simple-http便于接入console控制台&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="sentinel" scheme="https://perkins4j2.github.io/tags/sentinel/"/>
    
  </entry>
  
  <entry>
    <title>FastText介绍</title>
    <link href="https://perkins4j2.github.io/posts/55043/"/>
    <id>https://perkins4j2.github.io/posts/55043/</id>
    <published>2020-01-09T00:59:54.721Z</published>
    <updated>2020-01-09T01:25:42.191Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;FastText&quot;&gt;&lt;a href=&quot;#FastText&quot; class=&quot;headerlink&quot; title=&quot;FastText&quot;&gt;&lt;/a&gt;FastText&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;FastText是Facebook研究团队创建的一个库，用于高效计算word representation和执行文本分类，可以在几秒内完成其他算法几天才可以完成的任务。&lt;/p&gt;
&lt;p&gt;这个库在NLP社区获得了用户的大量支持，并且可能替代gensim包，它提供了像Word Vectors（词向量）功能。&lt;br&gt;
    
    </summary>
    
    
      <category term="FastText" scheme="https://perkins4j2.github.io/tags/FastText/"/>
    
  </entry>
  
  <entry>
    <title>Word2Vector介绍</title>
    <link href="https://perkins4j2.github.io/posts/44927/"/>
    <id>https://perkins4j2.github.io/posts/44927/</id>
    <published>2020-01-09T00:59:44.000Z</published>
    <updated>2020-01-09T01:25:42.197Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;word2vector&quot;&gt;&lt;a href=&quot;#word2vector&quot; class=&quot;headerlink&quot; title=&quot;word2vector&quot;&gt;&lt;/a&gt;word2vector&lt;/h3&gt;&lt;h4 id=&quot;word2vec简介&quot;&gt;&lt;a href=&quot;#word2vec简介&quot; class=&quot;headerlink&quot; title=&quot;word2vec简介&quot;&gt;&lt;/a&gt;word2vec简介&lt;/h4&gt;&lt;p&gt;word2vec的核心是神经网络，采用 CBOW（Continuous Bag-Of-Words，即连续的词袋模型）和 Skip-Gram 两种模型，将词语映像到同一坐标系，输出为数值型向量的方法。&lt;/p&gt;
&lt;p&gt;简而言之，就是将人类才可以看懂的文字，转换为机器也可以识别、操作、处理的数值，将一串文字转化为一个数值型向量的过程。&lt;br&gt;
    
    </summary>
    
      <category term="NLP" scheme="https://perkins4j2.github.io/categories/NLP/"/>
    
    
      <category term="word2vector" scheme="https://perkins4j2.github.io/tags/word2vector/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook安装</title>
    <link href="https://perkins4j2.github.io/posts/7893/"/>
    <id>https://perkins4j2.github.io/posts/7893/</id>
    <published>2020-01-09T00:59:32.000Z</published>
    <updated>2020-01-09T01:25:42.193Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;h4 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;headerlink&quot; title=&quot;前提&quot;&gt;&lt;/a&gt;前提&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Python 3.3+, or Python 2.7&lt;/li&gt;
&lt;li&gt;推荐Anaconda安装&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用Anaconda&quot;&gt;&lt;a href=&quot;#使用Anaconda&quot; class=&quot;headerlink&quot; title=&quot;使用Anaconda&quot;&gt;&lt;/a&gt;使用Anaconda&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;默认jupyter已安装&lt;/li&gt;
&lt;li&gt;若无，搜索jupyter进行安装&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用pip3&quot;&gt;&lt;a href=&quot;#使用pip3&quot; class=&quot;headerlink&quot; title=&quot;使用pip3&quot;&gt;&lt;/a&gt;使用pip3&lt;/h4&gt;&lt;p&gt;pip3 install –upgrade pip&lt;br&gt;pip3 install jupyter&lt;br&gt;
    
    </summary>
    
      <category term="NLP" scheme="https://perkins4j2.github.io/categories/NLP/"/>
    
    
      <category term="Jupyter" scheme="https://perkins4j2.github.io/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>动态代理和CGLib</title>
    <link href="https://perkins4j2.github.io/posts/25433/"/>
    <id>https://perkins4j2.github.io/posts/25433/</id>
    <published>2020-01-09T00:58:57.000Z</published>
    <updated>2020-01-09T01:25:42.199Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;1、JDK动态代理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用拦截器(拦截器必须实现InvocationHanlder)加上反射机制生成一个实现代理接口的匿名类。&lt;/li&gt;
&lt;li&gt;在调用具体方法前调用InvokeHandler来处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、CGLIB动态代理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用ASM开源包，对代理对象类的class文件加载进来，通过修改其字节码生成子类来处理。
    
    </summary>
    
      <category term="Java" scheme="https://perkins4j2.github.io/categories/Java/"/>
    
    
      <category term="aop" scheme="https://perkins4j2.github.io/tags/aop/"/>
    
  </entry>
  
  <entry>
    <title>AOP及内部调用</title>
    <link href="https://perkins4j2.github.io/posts/43132/"/>
    <id>https://perkins4j2.github.io/posts/43132/</id>
    <published>2020-01-09T00:58:46.000Z</published>
    <updated>2020-01-09T01:25:42.189Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;AOP简介&quot;&gt;&lt;a href=&quot;#AOP简介&quot; class=&quot;headerlink&quot; title=&quot;AOP简介&quot;&gt;&lt;/a&gt;AOP简介&lt;/h3&gt;&lt;p&gt;将相同逻辑的重复代码横向抽取出来，使用动态代理技术将这些重复代码织入到目标对象方法中，实现和原来一样的功能。&lt;br&gt;这样一来，我们就在写业务时只关心业务代码，而不用关心与业务无关的代码。&lt;/p&gt;
&lt;p&gt;拦截器的实现原理就是动态代理，实现AOP机制。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://perkins4j2.github.io/categories/Java/"/>
    
    
      <category term="aop" scheme="https://perkins4j2.github.io/tags/aop/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装和配置</title>
    <link href="https://perkins4j2.github.io/posts/25453/"/>
    <id>https://perkins4j2.github.io/posts/25453/</id>
    <published>2019-12-09T12:32:31.000Z</published>
    <updated>2019-12-09T12:36:49.517Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Docker&quot;&gt;&lt;a href=&quot;#Docker&quot; class=&quot;headerlink&quot; title=&quot;Docker&quot;&gt;&lt;/a&gt;Docker&lt;/h3&gt;&lt;p&gt;Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。&lt;/p&gt;
&lt;p&gt;Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。&lt;/p&gt;
&lt;p&gt;容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="docker" scheme="https://perkins4j2.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Python环境及工具安装</title>
    <link href="https://perkins4j2.github.io/posts/3231/"/>
    <id>https://perkins4j2.github.io/posts/3231/</id>
    <published>2019-12-09T12:32:14.000Z</published>
    <updated>2019-12-09T12:36:49.522Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载安装PyCharm CE2019.2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装Python&quot;&gt;&lt;a href=&quot;#安装Python&quot; class=&quot;headerlink&quot; title=&quot;安装Python&quot;&gt;&lt;/a&gt;安装Python&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.python.org/downloads/mac-osx/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载安装Python3.6&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Python" scheme="https://perkins4j2.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python3.6+Tensorflow1.8</title>
    <link href="https://perkins4j2.github.io/posts/16968/"/>
    <id>https://perkins4j2.github.io/posts/16968/</id>
    <published>2019-12-09T12:31:59.000Z</published>
    <updated>2019-12-09T12:36:49.520Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;要求&quot;&gt;&lt;a href=&quot;#要求&quot; class=&quot;headerlink&quot; title=&quot;要求&quot;&gt;&lt;/a&gt;要求&lt;/h3&gt;&lt;p&gt;Requires Python &amp;gt; 3.4 and pip &amp;gt;= 19.0&lt;/p&gt;
&lt;p&gt;目前是Python &amp;gt; 3.4，但3.7及以上不支持&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Python" scheme="https://perkins4j2.github.io/tags/Python/"/>
    
      <category term="Tensorflow" scheme="https://perkins4j2.github.io/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>Varint编码</title>
    <link href="https://perkins4j2.github.io/posts/63107/"/>
    <id>https://perkins4j2.github.io/posts/63107/</id>
    <published>2019-11-30T01:55:49.000Z</published>
    <updated>2019-11-30T02:01:52.430Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是Varint编码&quot;&gt;&lt;a href=&quot;#什么是Varint编码&quot; class=&quot;headerlink&quot; title=&quot;什么是Varint编码&quot;&gt;&lt;/a&gt;什么是Varint编码&lt;/h3&gt;&lt;p&gt;Varint是一种使用一个或多个字节序列化整数的方法，会把&lt;code&gt;整数&lt;/code&gt;编码为&lt;code&gt;变长字节&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;对于32位整型的&lt;code&gt;4&lt;/code&gt;个字节数据经过Varint编码后需要&lt;code&gt;1~5&lt;/code&gt;个字节，小的数字使用1个byte，大的数字使用5个bytes。&lt;/p&gt;
&lt;p&gt;64位整型数据编码后占用1~10个字节。在实际场景中小数字的使用率远远多于大数字，因此通过Varint编码对于大部分场景都可以起到很好的压缩效果。&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Varint" scheme="https://perkins4j2.github.io/tags/Varint/"/>
    
  </entry>
  
  <entry>
    <title>Kafka解压缩</title>
    <link href="https://perkins4j2.github.io/posts/27626/"/>
    <id>https://perkins4j2.github.io/posts/27626/</id>
    <published>2019-11-30T01:55:40.000Z</published>
    <updated>2019-11-30T02:01:52.425Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;压缩的目的&quot;&gt;&lt;a href=&quot;#压缩的目的&quot; class=&quot;headerlink&quot; title=&quot;压缩的目的&quot;&gt;&lt;/a&gt;压缩的目的&lt;/h3&gt;&lt;p&gt;时间换空间，用CPU时间去换磁盘空间或网络IO传输量。&lt;/p&gt;
&lt;h3 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h3&gt;&lt;p&gt;// 开启GZIP压缩&lt;br&gt;// Producer启动后，生产的每个消息集合都会经过GZIP压缩，能够很好地节省网络传输带宽和Kafka Broker端的磁盘占用。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;props.put(&lt;span class=&quot;string&quot;&gt;&quot;compression.type&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;gzip&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Producer&amp;lt;String, String&amp;gt; producer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; KafkaProducer&amp;lt;&amp;gt;(props);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="kafka" scheme="https://perkins4j2.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>Kafka Producer配置</title>
    <link href="https://perkins4j2.github.io/posts/38013/"/>
    <id>https://perkins4j2.github.io/posts/38013/</id>
    <published>2019-11-30T01:55:28.000Z</published>
    <updated>2019-11-30T02:01:52.427Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;acks&quot;&gt;&lt;a href=&quot;#acks&quot; class=&quot;headerlink&quot; title=&quot;acks&quot;&gt;&lt;/a&gt;acks&lt;/h3&gt;&lt;p&gt;producer希望leader返回的用于确认请求完成的确认数量. 可选值 all, -1, 0 1. 默认值为1。&lt;/p&gt;
&lt;p&gt;acks=0 不需要等待服务器的确认. 这是retries设置无效. 响应里来自服务端的offset总是-1. producer只管发不管发送成功与否。延迟低，容易丢失数据。&lt;/p&gt;
&lt;p&gt;acks=1 表示leader写入成功（但是并没有刷新到磁盘）后即向producer响应。延迟中等，一旦leader副本挂了，就会丢失数据。&lt;/p&gt;
&lt;p&gt;acks=all等待数据完成副本的复制, 等同于-1. 假如需要保证消息不丢失, 需要使用该设置. 同时需要设置unclean.leader.election.enable为true, 保证当ISR列表为空时, 选择其他存活的副本作为新的leader.&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="kafka" scheme="https://perkins4j2.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>Maven 打包Plugins集成</title>
    <link href="https://perkins4j2.github.io/posts/22633/"/>
    <id>https://perkins4j2.github.io/posts/22633/</id>
    <published>2019-11-30T01:54:51.000Z</published>
    <updated>2019-11-30T02:01:52.432Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;jar冲突检测&lt;/li&gt;
&lt;li&gt;源码编译&lt;/li&gt;
&lt;li&gt;源码生成jar&lt;/li&gt;
&lt;li&gt;pom依赖jar拷贝&lt;/li&gt;
&lt;li&gt;spring boot可执行jar生成&lt;/li&gt;
&lt;li&gt;脚本动态生成&lt;/li&gt;
&lt;li&gt;生成目录和打包tar
    
    </summary>
    
      <category term="工具利器" scheme="https://perkins4j2.github.io/categories/%E5%B7%A5%E5%85%B7%E5%88%A9%E5%99%A8/"/>
    
    
      <category term="Maven" scheme="https://perkins4j2.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Redis Cluster</title>
    <link href="https://perkins4j2.github.io/posts/39943/"/>
    <id>https://perkins4j2.github.io/posts/39943/</id>
    <published>2019-11-30T01:54:41.000Z</published>
    <updated>2019-11-30T02:01:52.429Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Redis-Cluster&quot;&gt;&lt;a href=&quot;#Redis-Cluster&quot; class=&quot;headerlink&quot; title=&quot;Redis Cluster&quot;&gt;&lt;/a&gt;Redis Cluster&lt;/h3&gt;&lt;p&gt;Redis Cluster是Redis3.0版本推出的高可用及分布式解决方案，多个Redis实例组成，数据按照槽(slot)存储分布在多个Redis实例上，通过Gossip流言协议来进行节点之间通信。&lt;/p&gt;
&lt;p&gt;Redis Cluster实现的功能：&lt;/p&gt;
&lt;p&gt;• 将数据分片到多个实例(按照slot存储)；&lt;br&gt;• 集群节点宕掉会自动failover；&lt;br&gt;• 提供相对平滑扩容(缩容)节点。&lt;/p&gt;
&lt;p&gt;Redis Cluster暂未有的：&lt;br&gt;• 实时同步&lt;br&gt;• 强一致性&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="redis" scheme="https://perkins4j2.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis跳表</title>
    <link href="https://perkins4j2.github.io/posts/64570/"/>
    <id>https://perkins4j2.github.io/posts/64570/</id>
    <published>2019-11-30T01:54:32.000Z</published>
    <updated>2019-11-30T02:01:52.428Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;跳表&quot;&gt;&lt;a href=&quot;#跳表&quot; class=&quot;headerlink&quot; title=&quot;跳表&quot;&gt;&lt;/a&gt;跳表&lt;/h3&gt;&lt;p&gt;跳表（skiplist）是一个特俗的链表，相比一般的链表，有更高的查找效率，其效率可比拟于二叉查找树。&lt;/p&gt;
&lt;p&gt;Redis里面使用skiplist是为了实现sorted set这种对外的数据结构。&lt;/p&gt;
&lt;p&gt;跳表预先间隔地保存了有序链表中的节点，从而在查找过程中能达到类似于二分搜索的效果，而二分搜索思想就是通过比较中点数据放弃另一半的查找，从而节省一半的查找时间，缺点即浪费了空间。&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="redis" scheme="https://perkins4j2.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Zero-Copy</title>
    <link href="https://perkins4j2.github.io/posts/20850/"/>
    <id>https://perkins4j2.github.io/posts/20850/</id>
    <published>2019-11-30T01:54:20.000Z</published>
    <updated>2019-11-30T02:01:52.431Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Zero-Copy零拷贝&quot;&gt;&lt;a href=&quot;#Zero-Copy零拷贝&quot; class=&quot;headerlink&quot; title=&quot;Zero-Copy零拷贝&quot;&gt;&lt;/a&gt;Zero-Copy零拷贝&lt;/h3&gt;&lt;p&gt;Zero-Copy用于提高Linux平台上的IO密集型的应用程序的性能。能够避免中间缓冲区中的冗余数据复制以及减少Linux内核空间和用户空间上下文交换的次数。&lt;/p&gt;
&lt;p&gt;Zero-Copy使得应用程序从本地磁盘读取数据，再将读取的数据原封不动直接地发送给Socket。&lt;br&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Zero-Copy" scheme="https://perkins4j2.github.io/tags/Zero-Copy/"/>
    
  </entry>
  
  <entry>
    <title>ThreadLocal原理</title>
    <link href="https://perkins4j2.github.io/posts/46263/"/>
    <id>https://perkins4j2.github.io/posts/46263/</id>
    <published>2019-11-29T07:56:37.000Z</published>
    <updated>2019-11-29T08:01:08.756Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h3&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ThreadLocal&amp;lt;String&amp;gt; CHARSET = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ThreadLocal&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;initialValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="ThreadLocal" scheme="https://perkins4j2.github.io/tags/ThreadLocal/"/>
    
  </entry>
  
  <entry>
    <title>Canal配置</title>
    <link href="https://perkins4j2.github.io/posts/60983/"/>
    <id>https://perkins4j2.github.io/posts/60983/</id>
    <published>2019-11-29T07:46:44.000Z</published>
    <updated>2019-11-29T08:03:34.534Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;新增用户和权限&quot;&gt;&lt;a href=&quot;#新增用户和权限&quot; class=&quot;headerlink&quot; title=&quot;新增用户和权限&quot;&gt;&lt;/a&gt;新增用户和权限&lt;/h3&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 新增用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;USER&lt;/span&gt; canal &lt;span class=&quot;keyword&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;canal&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 授权REPLICATION权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;REPLICATION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SLAVE&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;REPLICATION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CLIENT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; *.* &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;canal&#39;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FLUSH&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;PRIVILEGES&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;grants&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;canal&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看当前db binlog文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;binary&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;logs&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="Canal" scheme="https://perkins4j2.github.io/tags/Canal/"/>
    
  </entry>
  
  <entry>
    <title>Docker搭建kafka</title>
    <link href="https://perkins4j2.github.io/posts/58214/"/>
    <id>https://perkins4j2.github.io/posts/58214/</id>
    <published>2019-11-29T07:45:03.000Z</published>
    <updated>2019-11-29T08:01:08.750Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;搭建zookeeper环境&quot;&gt;&lt;a href=&quot;#搭建zookeeper环境&quot; class=&quot;headerlink&quot; title=&quot;搭建zookeeper环境&quot;&gt;&lt;/a&gt;搭建zookeeper环境&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull zookeeper&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -d \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     --restart=always \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     -v /opt/docker/zookeeper/zoo1/data:/data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     -v /opt/docker/zookeeper/zoo1/datalog:/datalog \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     -e ZOO_MY_ID=1 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     -e ZOO_SERVERS=&lt;span class=&quot;string&quot;&gt;&quot;server.1=zookeeper-A:2888:3888 server.2=zookeeper-B:2888:3888 server.3=zookeeper-C:2888:3888&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     --name=zookeeper-A \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     --net=host \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     --privileged \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     zookeeper&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;指定了–net=host和–privileged选项，使得容器可以使用主机的ip地址和端口进行通信。&lt;/li&gt;
&lt;li&gt;restart=always当Docker重启时，容器能自动启动&lt;/li&gt;
&lt;li&gt;2181：对client端提供服务&lt;/li&gt;
&lt;li&gt;3888：选举leader使用&lt;/li&gt;
&lt;li&gt;2888：集群内机器通讯使用（Leader监听此端口）
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="kafka" scheme="https://perkins4j2.github.io/tags/kafka/"/>
    
      <category term="docker" scheme="https://perkins4j2.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>SQL-Server备份</title>
    <link href="https://perkins4j2.github.io/posts/9251/"/>
    <id>https://perkins4j2.github.io/posts/9251/</id>
    <published>2019-11-29T07:44:04.000Z</published>
    <updated>2019-11-29T08:01:08.755Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;备份方案&quot;&gt;&lt;a href=&quot;#备份方案&quot; class=&quot;headerlink&quot; title=&quot;备份方案&quot;&gt;&lt;/a&gt;备份方案&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/sql/integration-services/backup-restore-and-move-the-ssis-catalog?view=sql-server-2014&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SSIS（SQL Server Integration Services）&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://perkins4j2.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="SqlServer" scheme="https://perkins4j2.github.io/tags/SqlServer/"/>
    
  </entry>
  
</feed>
